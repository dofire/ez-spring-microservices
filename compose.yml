version: '3.9'

services:
  s-api-gateway:
    build: ./s-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - s-user
      - s-product
      - s-order
      - s-payment
      - s-notification
    networks:
      - app-network

  s-user:
    build: ./s-user
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db_user
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1
    depends_on:
      - db
    networks:
      - app-network

  s-product:
    build: ./s-product
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db_product
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1
    depends_on:
      - db
    networks:
      - app-network

  s-order:
    build: ./s-order
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db_order
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1
    depends_on:
      - db
    networks:
      - app-network

  s-payment:
    build: ./s-payment
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db_payment
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1
    depends_on:
      - db
    networks:
      - app-network

  s-notification:
    build: ./s-notification
    networks:
      - app-network

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infras/sql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network

networks:
  app-network:

volumes:
  postgres-data:
